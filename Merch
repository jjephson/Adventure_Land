//Item IDs can be found via the commented code below:
show_json(parent.G.items);
//Object format is {name: "itemid", level: "upgrade level", price: max cost of item}
var itemsToBuy = [
  {name: "offering", price: 5000000},
  {name: "bow", level: 9, price: 30000000},
  {name: "dexbelt", level: 4, price: 75000000},
  {name: "intbelt", level: 4, price: 75000000},
  {name: "dexerring", level: 4, price: 100000},
  {name: "interring", level: 4, price: 100000},
  {name: "dexring", level: 4, price: 1000000},
  {name: "dintring", level: 4, price: 1000000},
  {name: "t2dexamulet", level: 4, price: 25000000},
  {name: "t2intamulet", level: 4, price: 25000000},
  {name: "dexamulet", level: 3, price: 1000000},
  {name: "intamulet", level: 3, price: 1000000}
 ]

var lastBuy;
setInterval(function () {
	
	buyItems();
	
}, 10);

function itemBuyPrice(name, level)
{
	var price = 1;
	
	for(var i = 0; i < itemsToBuy.length; i++)
	{
		var def = itemsToBuy[i];
		
		if(def.name == name && def.level <= level)
		{
			price = def.price;
		}
	}
	
	return price;
}

function buyItems()
{
	for(id in parent.entities)
    {
        var current=parent.entities[id];
		
		if(current.ctype != null && current.ctype == "merchant" && current.name != character.name)
		{
			
			var slotPrefix = "trade";
			
			for(var i = 1; i <= 16; i++)
			{
				var tradeSlot = current.slots[slotPrefix + i];
				
				if(tradeSlot != null)
				{
					var price = itemBuyPrice(tradeSlot.name, tradeSlot.level);
					
					if(price != null && character.gold >= tradeSlot.price && tradeSlot.price <= price)
					{
						if(lastBuy == null || new Date() - lastBuy > 100)
						{
							game_log("Item Bought: " + tradeSlot.name);
							game_log("From: " + current.name);
							game_log("Price: " + tradeSlot.price);
							trade_buy(current, slotPrefix + i);
							
							lastBuy = new Date();
						}
					}
				}
			}
		}
	}
}
